abline (h=mean(limbs)+dev)
dev
abline (h=mean(limbs)-dev)
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
lunch.box.df
ldply(lunch.box.df, function(c)as.factor(c))
library(plyr)
ldply(lunch.box.df, function(c)as.factor(c))
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
lunch.box.df
lunch.box.df$X1 <- as.factor(lunch.box.df$X1)
lunch.box.df$X2 <- as.factor(lunch.box.df$X2)
lunch.box.df$X3 <- as.factor(lunch.box.df$X3)
lunch.box.df
str(lunch.box.df)
lunch.box.df$x1[lunch.box.df$x1=="0"] <- "not chosen"
lunch.box.df$X1[lunch.box.df$X1=="0"] <- "not chosen"
str(lunch.box.df)
lunch.box.df$X4 <- as.factor(lunch.box.df$X4)
str(lunch.box.df)
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
str(lunch.box.df)
lunch.box.df$X1 <- as.factor(lunch.box.df$X1)
lunch.box.df$X2 <- as.factor(lunch.box.df$X2)
lunch.box.df$X3 <- as.factor(lunch.box.df$X3)
lunch.box.df$X4 <- as.factor(lunch.box.df$X4)
str(lunch.box.df)
lunch.box.df$X1 <- revalue(lunch.box.df$X1, c("1" = "chosen", "0" = "not chosen"))
str(lunch.box.df)
lunch.box.df
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
str(lunch.box.df)
lunch.box.df
lunch.box.df$X1 <- as.factor(lunch.box.df$X1)
lunch.box.df$X2 <- as.factor(lunch.box.df$X2)
lunch.box.df$X3 <- as.factor(lunch.box.df$X3)
lunch.box.df$X4 <- as.factor(lunch.box.df$X4)
lunch.box.df$X1 <- revalue(lunch.box.df$X1, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X2 <- revalue(lunch.box.df$X2, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X3 <- revalue(lunch.box.df$X3, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X4 <- revalue(lunch.box.df$X4, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df
library(gridExtra)
install.packages(gridExtra)
install.packages('gridExtra')
library(gridExtra)
pdf("lunch.box.df.pdf", height=11, width=8.5)
grid.table(lunch.box.df)
dev.off()
pdf("lunch.box.df.pdf", height=11, width=8.5)
setwd("C:\notoriousbig(data)\_posts")
setwd("C:\notoriousbig(data)\")
setwd('C:\notoriousbig(data)')
setwd('C:\')
setwd("C:\notoriousbig(data)")
getwd()
dev.off()
setwd("C:\notoriousbig(data)")
pdf("lunch.box.df.pdf", height=11, width=8.5)
grid.table(lunch.box.df)
dev.off()
names(lunch.box.df)
names(lunch.box.df) <- c("Sandwich", "Chocolate", "Apple", "Juice")
pdf("lunch.box.df.pdf", height=11, width=8.5)
grid.table(lunch.box.df)
dev.off()
png("lunch.box.df.png", height=11, width=8.5)
png("lunch.box.df.png", height=1100, width=850)
grid.table(lunch.box.df)
dev.off()
png("lunch.box.df.png", width=400)
grid.table(lunch.box.df)
dev.off()
count.chosens.per.column <- ldply(df, function(c)sum(c=="chosen"))
count.chosens.per.column
count.chosens.per.column <- ldply(lunch.box.df, function(c) sum(c=="chosen"))
count.chosens.per.column
png("count.chosens.per.column.png", width=400)
grid.table(count.chosens.per.column)
dev.off()
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("column name") + ylab("number of times 1 occured in column")
library(ggplot2)
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("column name") + ylab("number of times 1 occured in column")
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("column name") + ylab("number of times 1 occured in column")
variable.freqs <-
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("column name") + ylab("number of times 1 occured in column")
variable.freqs
library(ggplot2)
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white")
count.chosens.per.column
ggplot(count.chosens.per.column, aes(x=.id, y=V1))
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
plot(count.chosens.per.column)
is.data.frame(count.chosens.per.column)
ggplot(count.chosens.per.column, aes(x='.id', y='V1')) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
count.chosens.per.column
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
str(lunch.box.df)
lunch.box.df
lunch.box.df$X1 <- as.factor(lunch.box.df$X1)
lunch.box.df$X2 <- as.factor(lunch.box.df$X2)
lunch.box.df$X3 <- as.factor(lunch.box.df$X3)
lunch.box.df$X4 <- as.factor(lunch.box.df$X4)
lunch.box.df$X1 <- revalue(lunch.box.df$X1, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X2 <- revalue(lunch.box.df$X2, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X3 <- revalue(lunch.box.df$X3, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X4 <- revalue(lunch.box.df$X4, c("1" = "chosen", "0" = "not chosen"))
library(plyr)
lunch.box.df$X1 <- revalue(lunch.box.df$X1, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X2 <- revalue(lunch.box.df$X2, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X3 <- revalue(lunch.box.df$X3, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X4 <- revalue(lunch.box.df$X4, c("1" = "chosen", "0" = "not chosen"))
names(lunch.box.df) <- c("Sandwich", "Chocolate", "Apple", "Juice")
count.chosens.per.column <- ldply(lunch.box.df, function(c) sum(c=="chosen"))
count.chosens.per.column
library(ProjectTemplate)
load.project()
setwd("C:/Users/user/Documents/AnyRoad/R Data Analysis/Bookings.Users.Tours/")
load.project()
table(users.booking.tours$guide_id)
data_excl_sg <- users.booking.tours[users.booking.tours$guide_id != 732,]
table(data_excl_sg$guide_id)
summary(data_excl_sg)
table(data_excl_sg$tourist_id)
library(ggplot2)
tour_types <- data_excl_sg[, c('art_architecture', 'food_drinks', 'historical', 'outdoors_nature', 'active_adventure', 'cultural_religious', 'general_area', 'event', 'fashion_design', 'nightlife', 'layover_tour', 'gmaps'
)]
count_each_t <- ldply(tour_types, function(c)sum(c=="t"))
count_each_t
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
str(lunch.box.df)
lunch.box.df
lunch.box.df$X1 <- as.factor(lunch.box.df$X1)
lunch.box.df$X2 <- as.factor(lunch.box.df$X2)
lunch.box.df$X3 <- as.factor(lunch.box.df$X3)
lunch.box.df$X4 <- as.factor(lunch.box.df$X4)
library(plyr)
lunch.box.df$X1 <- revalue(lunch.box.df$X1, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X2 <- revalue(lunch.box.df$X2, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X3 <- revalue(lunch.box.df$X3, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X4 <- revalue(lunch.box.df$X4, c("1" = "chosen", "0" = "not chosen"))
names(lunch.box.df) <- c("Sandwich", "Chocolate", "Apple", "Juice")
setwd("C:\notoriousbig(data)")
install.packages('gridExtra')
setwd("C:/Users/user/Documents")
chosen.per.lunch.item <-
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
count.chosens.per.column
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
str(lunch.box.df)
lunch.box.df
lunch.box.df$X1 <- as.factor(lunch.box.df$X1)
lunch.box.df$X2 <- as.factor(lunch.box.df$X2)
lunch.box.df$X3 <- as.factor(lunch.box.df$X3)
lunch.box.df$X4 <- as.factor(lunch.box.df$X4)
library(plyr)
lunch.box.df$X1 <- revalue(lunch.box.df$X1, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X2 <- revalue(lunch.box.df$X2, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X3 <- revalue(lunch.box.df$X3, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X4 <- revalue(lunch.box.df$X4, c("1" = "chosen", "0" = "not chosen"))
names(lunch.box.df) <- c("Sandwich", "Chocolate", "Apple", "Juice")
count.chosens.per.column <- ldply(lunch.box.df, function(c) sum(c=="chosen"))
chosen.per.lunch.item <-
ggplot(count.chosens.per.column, aes(x=.id, y=V1)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
chosen.per.lunch.item
setwd("C:/Users/user/Documents")
ggsave(filename="chosen.per.lunch.item.pdf", plot=chosen.per.lunch.item,
width = 6, pi=100)
ggsave(filename="chosen.per.lunch.item.pdf", plot=chosen.per.lunch.item,
width = 6, dpi=100)
ggsave(filename="chosen.per.lunch.item.png", plot=chosen.per.lunch.item,
width = 6, dpi=100)
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
str(lunch.box.df)
lunch.box.df
lunch.box.df$X1 <- as.factor(lunch.box.df$X1)
lunch.box.df$X2 <- as.factor(lunch.box.df$X2)
lunch.box.df$X3 <- as.factor(lunch.box.df$X3)
lunch.box.df$X4 <- as.factor(lunch.box.df$X4)
library(plyr)
lunch.box.df$X1 <- revalue(lunch.box.df$X1, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X2 <- revalue(lunch.box.df$X2, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X3 <- revalue(lunch.box.df$X3, c("1" = "chosen", "0" = "not chosen"))
lunch.box.df$X4 <- revalue(lunch.box.df$X4, c("1" = "chosen", "0" = "not chosen"))
names(lunch.box.df) <- c("Sandwich", "Chocolate", "Apple", "Juice")
install.packages('gridExtra')
library(gridExtra)
png("lunch.box.df.png", width=400)
grid.table(lunch.box.df)
dev.off()
library(gridExtra)
png("lunch.box.df.png")
grid.table(lunch.box.df)
dev.off()
a <- sample(0:1,40,replace=T)
lunch.box.df <- data.frame(matrix(a,10,4))
str(lunch.box.df)
lunch.box.df
count.chosens.per.column <- ldply(lunch.box.df, function(c) sum(c==1))
library(plyr)
count.chosens.per.column <- ldply(lunch.box.df, function(c) sum(c==1))
count.chosens.per.column
dog = c("fido", "flop", "woody", "fido")
dog1 = c("flop", "fido", "fido", "fido")
dogs = data.frame(dog, dog1)
dogs
str(dogs)
dog.final <- data.frame(lapply(dogs, as.character), stringsAsFactors=FALSE)
dog.final
str(dog.final)
count.chosens.per.column <- ldply(dog, function(c) sum(c=="fido"))
count.chosens.per.column
count.chosens.per.column <- ldply(dogs, function(c) sum(c=="fido"))
count.chosens.per.column
a <- sample(0:1,40,replace=T)
a
a <- sample(10:20,5,replace=T)
a
b <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
country.count.df <- data.frame(a,b)
country.count.df
country.count.df <- data.frame(b,a)
country.count.df
str(country.count.df)
country.count.df
a <- sample(10:100,5,replace=T)
a
b <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
country.count.df <- data.frame(b,a)
country.count.df
str(country.count.df)
a <- sample(10:100,5,replace=T)
a
b <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
country.count.df <- data.frame(b,a)
country.count.df
str(country.count.df)
ggplot(country.count.df, aes(x=b, y=a)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
library(ggplot2)
ggplot(country.count.df, aes(x=b, y=a)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
count <- sample(10:100,5,replace=T)
origin <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
country.count.df <- data.frame(count,origin)
country.count.df
country.count.df <- data.frame(origin, count)
country.count.df
str(country.count.df)
fn = factor(country.count.df$origin, levels=country.count.df$origin[order(country.count.df$count, country.count.df$origin], ordered=TRUE)])
fn = factor(country.count.df$origin,
levels=country.count.df$origin[
order(country.count.df$count, country.count.df$origin],
ordered=TRUE))
fn = factor(country.count.df$origin,
levels=country.count.df$origin[
order(country.count.df$count, country.count.df$origin)],
ordered=TRUE)
#scenario where each column can be 1 or 0
count <- sample(10:100,5,replace=T)
origin <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
cc.df <- data.frame(origin, count)
#sample of restaurant origin in town
cc.df
str(cc.df)
#plot is hard to interpret when countries ordered alphabetically
library(ggplot2)
country.count.plot <-
ggplot(cc.df, aes(x=b, y=a)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
fn = factor(cc.df$origin,
levels=cc.df$origin[
order(cc.df$count, cc.df$origin)],
ordered=TRUE)
fn
cc.df$origin = factor(cc.df$origin,
levels=cc.df$origin[
order(cc.df$count, cc.df$origin)],
ordered=TRUE)
cc.df
ggplot(cc.df, aes(x=b, y=a)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
factor(cc.df$origin) = factor(cc.df$origin,
levels=cc.df$origin[order(cc.df$count,cc.df$origin)],
ordered=TRUE)
levels(cc.df$origin) = factor(cc.df$origin,
levels=cc.df$origin[order(cc.df$count,cc.df$origin)],
ordered=TRUE)
cc.df
ggplot(cc.df, aes(x=b, y=a)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
levels(cc.df$origin) = factor(cc.df$origin,
levels=cc.df$origin[order(cc.df$count)],
ordered=TRUE)
cc.df
levels(cc.df$origin) = factor(cc.df$origin,
levels=cc.df$origin[order(cc.df$count, cc.df$origin)],
ordered=TRUE)
cc.df
cc.df$origin <- factor(cc.df$origin[,drop=TRE])
cc.df$origin <- factor(cc.df$origin[,drop=TRUE])
cc.df
cc.df$origin = factor(cc.df$origin,
levels=cc.df$origin[order(cc.df$count, cc.df$origin)],
ordered=TRUE)
cc.df$origin <- factor(cc.df$origin[,drop=TRUE])
cc.df
str[cc.df$origin]
str[cc.df]
cc.df
#scenario where each column can be 1 or 0
origin <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
cc.df <- data.frame(origin, count)
cc.df
str(cc.df)
cc.df$origin = factor(cc.df$origin,
levels(cc.df$origin)[order(cc.df$count, cc.df$origin)])
cc.df
str[cc.df]
str(cc.df)
ggplot(cc.df, aes(x=b, y=a)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
cc.df$origin = factor(cc.df$origin,
levels(cc.df$origin)[order(cc.df$count)])
ggplot(cc.df, aes(x=b, y=a)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
cc.df$origin = reorder(cc.df$origin,
new.order=[order(cc.df$count)])
cc.df$origin = reorder(cc.df$origin,
new.order=order(cc.df$count))
cc.df$origin = reorder(x = cc.df$origin, X = cc.df, function(c)=order(cc.df$count))
cc.df$origin = reorder(x = cc.df$origin, X = cc.df, function(c) order(cc.df$count))
cc.df$origin = reorder(x = cc.df$origin, function(c) order(cc.df$count))
cc.df$origin <- factor(cc.df$origin, levels=as.character(unique(my.dfcc.df[order(cc.df$count),]$origin)))
cc.df$origin <- factor(cc.df$origin,
levels=as.character(unique(cc.df[order(cc.df$count),]$origin)))
cc.df
str(cc.df)
cc.df$origin <- factor(cc.df$origin,
levels=as.character(cc.df[order(cc.df$count),]$origin))
cc.df
str(cc.df)
levels(cc.df$origin)[with(cc.df, interaction(origin, count, drop=T))]
levels(cc.df$origin)[with(cc.df, interaction(count, origin, drop=T))]
reorder(x = cc.df$origin, function(c) order(cc.df$count))
factor(cc.df$origin, levels=as.character(cc.df[order(cc.df$count),]$origin))
levels(cc.df$origin)[with(cc.df, interaction(count, origin, drop=T))]
fn <-levels(cc.df$origin)[with(cc.df, interaction(count, origin, drop=T))]
str(fn)
factor(cc.df$origin, levels(cc.df$origin)[order(cc.df$count)])
cc.df$origin <-factor(cc.df$origin, levels(cc.df$origin)[order(cc.df$count)])
ggplot(cc.df, aes(x=b, y=a)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
count <- sample(10:100,5,replace=T)
origin <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
cc.df <- data.frame(origin, count)
cc.df
count <- sample(10:100,5,replace=T)
cc.df <- data.frame(origin, count)
cc.df
cc.df$origin <-factor(cc.df$origin, levels(cc.df$origin)[order(cc.df$count)])
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
factor(cc.df$origin, levels(cc.df$origin)[order(cc.df$count)])
cc.df
cc.df$origin <- factor(cc.df$origin, levels(cc.df$origin)[order(cc.df$count)])
cc.df
cc.df$origin <- factor(cc.df$origin, levels = levels(cc.df$origin)[5:1])
cc.df
factor(cc.df$origin, levels(cc.df$origin)[5:1])
factor(cc.df$origin, levels(cc.df$origin)[5:1])
count <- sample(10:100,5,replace=T)
origin <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
cc.df <- data.frame(origin, count)
cc.df
str(cc.df)
cc.df$origin
factor(cc.df$origin, levels(cc.df$origin)[5:1])
cc.df$origin <- factor(cc.df$origin, levels(cc.df$origin)[5:1])
cc.df$origin
cc.df
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
cc.df$origin <- factor(cc.df$origin, levels(cc.df$origin)[5:1])
cc.df$origin
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
order(cc.df$count)
sort(cc.df$count)
cc.df$origin
cc.df
sort(cc.df$count, decreasing = TRUE)
cc.df$origin <- factor(cc.df$origin, levels(cc.df$origin)[sort(cc.df$count, decreasing = TRUE)])
cc.df$origin
count <- sample(10:100,5,replace=T)
origin <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
cc.df <- data.frame(origin, count)
cc.df$origin <- redorder(cc.df$origin, cc.df$count)
cc.df$origin <- reorder(cc.df$origin, cc.df$count)
cc.df
cc.df$origin
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
cc.df$origin <- reorder(cc.df$origin, -cc.df$count)
cc.df$origin <- reorder(cc.df$origin, -cc.df$count)
cc.df$origin
cc.df
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
setwd("C:\notoriousbig(data)\assets\")
setwd('C:\notoriousbig(data)/assets/')
setwd('C:/notoriousbig(data)/assets/')
install.packages('gridExtra')
library(gridExtra)
count <- sample(10:100,5,replace=T)
origin <- c('Turkey', 'Brazil', 'France', 'China', 'Thailand')
cc.df <- data.frame(origin, count)
cc.df
str(cc.df)
png("student_origin.png")
grid.table(lunch.box.df)
grid.table(cc.df)
dev.off()
png("student_origin_str.png")
grid.table(str(cc.df)
)
str(cc.df)
as.data.frame(str(cc.df))
struct <- as.data.frame(str(cc.df))
struct
struct <- str(cc.df)
struct
dev.off()
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
country.count.plot <-
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
country.count.plot
ggsave(filename="unordered_origins.png", plot=country.count.plot)
png("student_origin.png", width=400)
grid.table(cc.df)
dev.off()
ggsave(filename="unordered_origins.png", plot=country.count.plot, width = 6, dpi=100)
cc.df$origin <- reorder(cc.df$origin, cc.df$count)
cc.df$origin
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
country.count.plot <-
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
country.count.plot
ggsave(filename="ascending_origins.png", plot=country.count.plot, width = 6, dpi=100)
cc.df$origin <- reorder(cc.df$origin, -cc.df$count)
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
#voila the plot I was looking for
country.count.plot <-
ggplot(cc.df, aes(x=origin, y=count)) +
geom_bar(stat="identity", colour="black", fill="white") +
xlab("") + ylab("")
country.count.plot
ggsave(filename="descending_origins.png", plot=country.count.plot, width = 6, dpi=100)
