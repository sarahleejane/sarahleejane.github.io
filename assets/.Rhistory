aes(x=Longitude, y=Latitude), colour="Dark Green", fill="Pink",pch=21, size=7, alpha=I(0.7))
map_data
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Green", fill="Pink",pch=21, size=7, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Dark Green", fill="Pink",pch=21, size=7, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Red", fill="Pink",pch=21, size=7, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Dark Pink", fill="Pink",pch=21, size=7, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=21, size=7, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
setwd("C:\notoriousbig(data)/assets/")
setwd("C:/notoriousbig(data)/assets/")
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="world.map.plot.png", plot=map_data_final,
width = 6, dpi=100)
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=21, size=5, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
#go to right location
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="world.map.plot.png", plot=map_data_final,
width = 6, dpi=100)
map_data_sized <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, size=Value), colour="Green", fill="White",pch=21, alpha=I(0.7)) +
cleanup
map_data_sized
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=21, size=5, alpha=I(0.6))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
#go to right location
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="world.map.plot.png", plot=map_data_final,
width = 6, dpi=100)
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=21, size=5, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
#go to right location
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="world.map.plot.png", plot=map_data_final,
width = 6, dpi=100)
map_data_sized <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, size=Value), colour="Deep Pink", fill="Pink",pch=21, alpha=I(0.7)) +
cleanup
map_data_sized
ggsave(filename="world.map.sized.plot.png", plot=map_data_sized,
width = 6, dpi=100)
map_data_coloured <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=10, alpha=I(0.7)) +
cleanup +
scale_fill_brewer(palette="Greens")
map_data_coloured
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=10, alpha=I(0.7)) +
cleanup
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=10, alpha=I(0.7)) +
cleanup
scale_fill_brewer(palette="Accent")
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=10, alpha=I(0.7)) +
cleanup +
scale_fill_brewer(palette="Accent")
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=10, alpha=I(0.7)) +
cleanup +
scale_fill_brewer("Accent")
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=10, pch=21, alpha=I(0.7)) +
cleanup +
scale_fill_brewer("Accent")
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=10, alpha=I(0.7)) +
cleanup
map_data_coloured <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=10, alpha=I(0.7)) +
cleanup
map_data_coloured
ggsave(filename="world.map.coloured.plot.png", plot=map_data_coloured,
width = 6, dpi=100)
map_data_coloured <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=5, alpha=I(0.7)) +
cleanup
map_data_coloured
ggsave(filename="world.map.coloured.plot.png", plot=map_data_coloured,
width = 6, dpi=100)
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, pch=Value), size=5, alpha=I(0.7)) +
cleanup
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=1, size=5, alpha=I(0.7))+
cleanup
map_data_pch<-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=5, size=5, alpha=I(0.7))+
cleanup
map_data_pch
map_data_pch<-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=15, size=5, alpha=I(0.7))+
cleanup
map_data_pch
map_data_pch<-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=25, size=5, alpha=I(0.7))+
cleanup
map_data_pch
map_data_pch<-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=24, size=5, alpha=I(0.7))+
cleanup
map_data_pch
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=30, size=5, alpha=I(0.7))+
cleanup
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=26, size=5, alpha=I(0.7))+
cleanup
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=24, size=5, alpha=I(0.7))+
cleanup
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=22, size=5, alpha=I(0.7))+
cleanup
map_data_pch<-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink", fill="Pink",pch=22, size=5, alpha=I(0.7))+
cleanup
map_data_pch
ggsave(filename="world.map.square.plot.png", plot=map_data_pch,
width = 6, dpi=100)
#**get tour cities
library(ProjectTemplate)
setwd("C:/Users/user/Documents/DataScience/Notorious BIG code snippets/projects/")
#getwd()
load.project()
cities <- as.data.frame(citylocations.hardcopy.final)
cities$Note <- NULL
cities <- unique(cities)
cities$Latitude <- as.numeric(cities$Latitude)
cities$Longitude <- as.numeric(cities$Longitude)
names(cities)
cities$Value <- sample(30:50, size = nrow(cities), replace = TRUE)
#***script***
#table of cities with latitude and longitude
cities
#*mention source of csv file
#***start blog
library(ggplot2)
library(maps)
#Get world map info
world_map <- map_data("world")
#Creat a base plot
p <- ggplot() + coord_fixed() +
xlab("") + ylab("")
#Add map to base plot
base_world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),
colour="light green", fill="light green")
base_world
#Add data points to map
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink",
fill="Pink",pch=21, size=5, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="world.map.plot.png", plot=map_data_final,
width = 13, dpi=100)
#Add data points to map with value affecting size
map_data_sized <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, size=Value), colour="Deep Pink",
fill="Pink",pch=21, alpha=I(0.7)) +
cleanup
map_data_sized
ggsave(filename="world.map.sized.plot.png", plot=map_data_sized,
width = 13, dpi=100)
#Add data points to map with value affecting colour
map_data_coloured <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=5, alpha=I(0.7)) +
cleanup
map_data_coloured
ggsave(filename="world.map.coloured.plot.png", plot=map_data_coloured,
width = 13, dpi=100)
#There are exciting plot shapes if you start playing with pch!
map_data_pch<-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink",
fill="Pink",pch=22, size=5, alpha=I(0.7)) +
cleanup
map_data_pch
ggsave(filename="world.map.square.plot.png", plot=map_data_pch,
width = 13, dpi=100)
ggsave(filename="world.map.square.plot.png", plot=map_data_pch)
ggsave(filename="world.map.square.plot.png", plot=map_data_pch, dpi=100)
ggsave(filename="world.map.square.plot.png", plot=map_data_pch)
#**get tour cities
library(ProjectTemplate)
setwd("C:/Users/user/Documents/DataScience/Notorious BIG code snippets/projects/")
#getwd()
load.project()
cities <- as.data.frame(citylocations.hardcopy.final)
cities$Note <- NULL
cities <- unique(cities)
cities$Latitude <- as.numeric(cities$Latitude)
cities$Longitude <- as.numeric(cities$Longitude)
names(cities)
cities$Value <- sample(30:50, size = nrow(cities), replace = TRUE)
#***script***
#table of cities with latitude and longitude
cities
#*mention source of csv file
#***start blog
library(ggplot2)
library(maps)
#Get world map info
world_map <- map_data("world")
#Creat a base plot
p <- ggplot() + coord_fixed() +
xlab("") + ylab("")
#Add map to base plot
base_world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),
colour="light green", fill="light green")
base_world
#Add data points to map
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink",
fill="Pink",pch=21, size=5, alpha=I(0.7))
map_data
#Remove legend and axes, and clear grid background
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
map_data_final <-
map_data + cleanup
map_data_final
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="world.map.plot.png", plot=map_data_final)
#Add data points to map with value affecting size
map_data_sized <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, size=Value), colour="Deep Pink",
fill="Pink",pch=21, alpha=I(0.7)) +
cleanup
map_data_sized
ggsave(filename="world.map.sized.plot.png", plot=map_data_sized,
width = 13, dpi=100)
#Add data points to map with value affecting colour
map_data_coloured <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=5, alpha=I(0.7)) +
cleanup
map_data_coloured
ggsave(filename="world.map.coloured.plot.png", plot=map_data_coloured)
#There are exciting plot shapes if you start playing with pch!
map_data_pch<-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink",
fill="Pink",pch=22, size=5, alpha=I(0.7)) +
cleanup
map_data_pch
ggsave(filename="world.map.square.plot.png", plot=map_data_pch)
base_world + cleanup
base_world_messy <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),
colour="light green", fill="light green")
base_world_messy
base_world <- base_world_messy + cleanup
base_world
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink",
fill="Pink",pch=21, size=5, alpha=I(0.7))
map_data
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, size=Value), colour="Deep Pink",
fill="Pink",pch=21, alpha=I(0.7))
#**get tour cities
library(ProjectTemplate)
setwd("C:/Users/user/Documents/DataScience/Notorious BIG code snippets/projects/")
#getwd()
load.project()
cities <- as.data.frame(citylocations.hardcopy.final)
cities$Note <- NULL
cities <- unique(cities)
cities$Latitude <- as.numeric(cities$Latitude)
cities$Longitude <- as.numeric(cities$Longitude)
names(cities)
cities$Value <- sample(30:50, size = nrow(cities), replace = TRUE)
#***script***
#table of cities with latitude and longitude
cities
#*mention source of csv file
#***start blog
library(ggplot2)
library(maps)
#Get world map info
world_map <- map_data("world")
#Creat a base plot
p <- ggplot() + coord_fixed() +
xlab("") + ylab("")
#Add map to base plot
base_world_messy <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),
colour="light green", fill="light green")
base_world_messy
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="messy.map.png", plot=base_world_messy)
#Strip the map down so it looks super clean (and beautiful!)
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
base_world <- base_world_messy + cleanup
base_world
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="clean.map.png", plot=base_world)
#Add simple data points to map
map_data <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink",
fill="Pink",pch=21, size=5, alpha=I(0.7))
map_data
setwd("C:/notoriousbig(data)/assets/")
ggsave(filename="world.map.plot.png", plot=map_data_final)
#Add data points to map with value affecting size
map_data_sized <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, size=Value), colour="Deep Pink",
fill="Pink",pch=21, alpha=I(0.7))
map_data_sized
ggsave(filename="world.map.sized.plot.png", plot=map_data_sized)
#Add data points to map with value affecting colour
map_data_coloured <-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude, colour=Value), size=5, alpha=I(0.7))
map_data_coloured
ggsave(filename="world.map.coloured.plot.png", plot=map_data_coloured)
#There are exciting plot shapes if you start playing with pch!
map_data_pch<-
base_world +
geom_point(data=cities,
aes(x=Longitude, y=Latitude), colour="Deep Pink",
fill="Pink",pch=22, size=5, alpha=I(0.7))
map_data_pch
ggsave(filename="world.map.square.plot.png", plot=map_data_pch)
